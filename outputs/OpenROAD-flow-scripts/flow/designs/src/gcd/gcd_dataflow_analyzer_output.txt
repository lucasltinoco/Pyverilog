~/workspace/Pyverilog$ python examples/example_dataflow_analyzer.py -t gcd verilogcode/OpenROAD-flow-scripts/flow/designs/src/gcd/gcd.v 

Generating LALR tables
WARNING: 183 shift/reduce conflicts
Directive:
Instance:
(gcd.ctrl, 'GcdUnitCtrlRTL_0x4d0fc71ead8d3d9e')
(gcd.dpath, 'GcdUnitDpathRTL_0x4d0fc71ead8d3d9e')
(gcd.dpath.a_lt_b, 'LtComparator_0x422b1f52edd46a85')
(gcd.dpath.a_mux, 'Mux_0x683fa1a418b072c9')
(gcd.dpath.b_mux, 'Mux_0xdd6473406d1a99a')
(gcd.dpath.a_reg, 'RegEn_0x68db79c4ec1d6e5b')
(gcd.dpath.b_reg, 'RegEn_0x68db79c4ec1d6e5b')
(gcd.ctrl.state, 'RegRst_0x9f365fdf6c8998a')
(gcd.dpath.sub, 'Subtractor_0x422b1f52edd46a85')
(gcd.dpath.b_zero, 'ZeroComparator_0x422b1f52edd46a85')
(gcd, 'gcd')
Term:
(Term name:gcd.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$a_mux_sel type:['Wire'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl$a_reg_en type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$b_mux_sel type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$b_reg_en type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$is_a_lt_b type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$is_b_zero type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$req_rdy type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$req_val type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$resp_rdy type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl$resp_val type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.A_MUX_SEL_B type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl.A_MUX_SEL_IN type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl.A_MUX_SEL_SUB type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl.A_MUX_SEL_X type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl.B_MUX_SEL_A type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl.B_MUX_SEL_IN type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl.B_MUX_SEL_X type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl.STATE_CALC type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl.STATE_DONE type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl.STATE_IDLE type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn0_curr_state__0 type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn10_a_reg_en type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn11_b_mux_sel type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn12_b_reg_en type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn13_do_swap type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn14_do_sub type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn15_req_rdy type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn16_resp_val type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn17_a_mux_sel type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn18_a_reg_en type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn19_b_mux_sel type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn1_next_state__0 type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn20_b_reg_en type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn21_req_rdy type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn22_resp_val type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn23_a_mux_sel type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn24_a_reg_en type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn25_b_mux_sel type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn26_b_reg_en type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn27_req_rdy type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn28_resp_val type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn29_a_mux_sel type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn2_next_state__0 type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn30_a_reg_en type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn31_b_mux_sel type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn32_b_reg_en type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn3_next_state__0 type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn4_next_state__0 type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn5_state$in_ type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn6_current_state__1 type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn7_req_rdy type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn8_resp_val type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl._rn9_a_mux_sel type:['Rename'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl.a_mux_sel type:['Output', 'Reg'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl.a_reg_en type:['Output', 'Reg'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.b_mux_sel type:['Output', 'Reg'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.b_reg_en type:['Output', 'Reg'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.curr_state__0 type:['Reg'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl.current_state__1 type:['Reg'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl.do_sub type:['Reg'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.do_swap type:['Reg'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.is_a_lt_b type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.is_b_zero type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.next_state__0 type:['Reg'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl.req_rdy type:['Output', 'Reg'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.req_val type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.resp_rdy type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.resp_val type:['Output', 'Reg'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.state$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.state$in_ type:['Reg'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl.state$out type:['Wire'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl.state$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.state.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.state.in_ type:['Input', 'Wire'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl.state.out type:['Output', 'Reg'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.ctrl.state.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.ctrl.state.reset_value type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.dpath$a_mux_sel type:['Wire'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.dpath$a_reg_en type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath$b_mux_sel type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath$b_reg_en type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath$is_a_lt_b type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath$is_b_zero type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath$req_msg_a type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath$req_msg_b type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath$resp_msg type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b$in0 type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b$in1 type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b$out type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b._rn33_out type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b.in0 type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b.in1 type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b.out type:['Output', 'Reg'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_lt_b.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux$in_$000 type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux$in_$001 type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux$in_$002 type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux$out type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux$sel type:['Wire'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux._rn35_out type:['Rename'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux.in_ type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0) dims:[(IntConst 0):(IntConst 2)])
(Term name:gcd.dpath.a_mux.in_$000 type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux.in_$001 type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux.in_$002 type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux.nports type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux.out type:['Output', 'Reg'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux.sel type:['Input', 'Wire'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.dpath.a_mux_sel type:['Input', 'Wire'] msb:(IntConst 1) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg$en type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg$in_ type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg$out type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg.en type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg.in_ type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg.out type:['Output', 'Reg'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.a_reg_en type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux$in_$000 type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux$in_$001 type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux$out type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux$sel type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux._rn36_out type:['Rename'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux.in_ type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0) dims:[(IntConst 0):(IntConst 1)])
(Term name:gcd.dpath.b_mux.in_$000 type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux.in_$001 type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux.nports type:['Localparam'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux.out type:['Output', 'Reg'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux.sel type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_mux_sel type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg$en type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg$in_ type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg$out type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg.en type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg.in_ type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg.out type:['Output', 'Reg'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg_en type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_reg_out type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_zero$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_zero$in_ type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_zero$out type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_zero$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_zero._rn34_out type:['Rename'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_zero.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_zero.in_ type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.b_zero.out type:['Output', 'Reg'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.b_zero.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.is_a_lt_b type:['Output', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.is_b_zero type:['Output', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.req_msg_a type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.req_msg_b type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.resp_msg type:['Output', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.sub$clk type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.sub$in0 type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.sub$in1 type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.sub$out type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.sub$reset type:['Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.sub._rn37_out type:['Rename'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.sub.clk type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.sub.in0 type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.sub.in1 type:['Input', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.sub.out type:['Output', 'Reg'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.dpath.sub.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.dpath.sub_out type:['Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.req_msg type:['Input', 'Wire'] msb:(IntConst 31) lsb:(IntConst 0))
(Term name:gcd.req_rdy type:['Output', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.req_val type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.reset type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.resp_msg type:['Output', 'Wire'] msb:(IntConst 15) lsb:(IntConst 0))
(Term name:gcd.resp_rdy type:['Input', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
(Term name:gcd.resp_val type:['Output', 'Wire'] msb:(IntConst 0) lsb:(IntConst 0))
Bind:
(Bind dest:gcd.ctrl$a_mux_sel tree:(Terminal gcd.ctrl.a_mux_sel))
(Bind dest:gcd.ctrl$a_reg_en tree:(Terminal gcd.ctrl.a_reg_en))
(Bind dest:gcd.ctrl$b_mux_sel tree:(Terminal gcd.ctrl.b_mux_sel))
(Bind dest:gcd.ctrl$b_reg_en tree:(Terminal gcd.ctrl.b_reg_en))
(Bind dest:gcd.ctrl$clk tree:(Terminal gcd.clk))
(Bind dest:gcd.ctrl$is_a_lt_b tree:(Terminal gcd.dpath$is_a_lt_b))
(Bind dest:gcd.ctrl$is_b_zero tree:(Terminal gcd.dpath$is_b_zero))
(Bind dest:gcd.ctrl$req_rdy tree:(Terminal gcd.ctrl.req_rdy))
(Bind dest:gcd.ctrl$req_val tree:(Terminal gcd.req_val))
(Bind dest:gcd.ctrl$reset tree:(Terminal gcd.reset))
(Bind dest:gcd.ctrl$resp_rdy tree:(Terminal gcd.resp_rdy))
(Bind dest:gcd.ctrl$resp_val tree:(Terminal gcd.ctrl.resp_val))
(Bind dest:gcd.ctrl.A_MUX_SEL_B tree:(IntConst 2))
(Bind dest:gcd.ctrl.A_MUX_SEL_IN tree:(IntConst 0))
(Bind dest:gcd.ctrl.A_MUX_SEL_SUB tree:(IntConst 1))
(Bind dest:gcd.ctrl.A_MUX_SEL_X tree:(IntConst 0))
(Bind dest:gcd.ctrl.B_MUX_SEL_A tree:(IntConst 0))
(Bind dest:gcd.ctrl.B_MUX_SEL_IN tree:(IntConst 1))
(Bind dest:gcd.ctrl.B_MUX_SEL_X tree:(IntConst 0))
(Bind dest:gcd.ctrl.STATE_CALC tree:(IntConst 1))
(Bind dest:gcd.ctrl.STATE_DONE tree:(IntConst 2))
(Bind dest:gcd.ctrl.STATE_IDLE tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn0_curr_state__0 tree:(Terminal gcd.ctrl.state$out))
(Bind dest:gcd.ctrl._rn10_a_reg_en tree:(IntConst 1))
(Bind dest:gcd.ctrl._rn11_b_mux_sel tree:(Terminal gcd.ctrl.B_MUX_SEL_IN))
(Bind dest:gcd.ctrl._rn12_b_reg_en tree:(IntConst 1))
(Bind dest:gcd.ctrl._rn13_do_swap tree:(Terminal gcd.ctrl.is_a_lt_b))
(Bind dest:gcd.ctrl._rn14_do_sub tree:(Operator Unot Next:(Terminal gcd.ctrl.is_b_zero)))
(Bind dest:gcd.ctrl._rn15_req_rdy tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn16_resp_val tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn17_a_mux_sel tree:(Branch Cond:(Terminal gcd.ctrl._rn13_do_swap) True:(Terminal gcd.ctrl.A_MUX_SEL_B) False:(Terminal gcd.ctrl.A_MUX_SEL_SUB)))
(Bind dest:gcd.ctrl._rn18_a_reg_en tree:(IntConst 1))
(Bind dest:gcd.ctrl._rn19_b_mux_sel tree:(Terminal gcd.ctrl.B_MUX_SEL_A))
(Bind dest:gcd.ctrl._rn1_next_state__0 tree:(Terminal gcd.ctrl.state$out))
(Bind dest:gcd.ctrl._rn20_b_reg_en tree:(Terminal gcd.ctrl._rn13_do_swap))
(Bind dest:gcd.ctrl._rn21_req_rdy tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn22_resp_val tree:(IntConst 1))
(Bind dest:gcd.ctrl._rn23_a_mux_sel tree:(Terminal gcd.ctrl.A_MUX_SEL_X))
(Bind dest:gcd.ctrl._rn24_a_reg_en tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn25_b_mux_sel tree:(Terminal gcd.ctrl.B_MUX_SEL_X))
(Bind dest:gcd.ctrl._rn26_b_reg_en tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn27_req_rdy tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn28_resp_val tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn29_a_mux_sel tree:(Terminal gcd.ctrl.A_MUX_SEL_X))
(Bind dest:gcd.ctrl._rn2_next_state__0 tree:(Terminal gcd.ctrl.STATE_CALC))
(Bind dest:gcd.ctrl._rn30_a_reg_en tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn31_b_mux_sel tree:(Terminal gcd.ctrl.B_MUX_SEL_X))
(Bind dest:gcd.ctrl._rn32_b_reg_en tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn3_next_state__0 tree:(Terminal gcd.ctrl.STATE_DONE))
(Bind dest:gcd.ctrl._rn4_next_state__0 tree:(Terminal gcd.ctrl.STATE_IDLE))
(Bind dest:gcd.ctrl._rn5_state$in_ tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn0_curr_state__0),(Terminal gcd.ctrl.STATE_DONE)) True:(Branch Cond:(Operator Land Next:(Terminal gcd.ctrl.resp_val),(Terminal gcd.ctrl.resp_rdy)) True:(Terminal gcd.ctrl._rn4_next_state__0) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn0_curr_state__0),(Terminal gcd.ctrl.STATE_CALC)) True:(Branch Cond:(Operator Land Next:(Operator Ulnot Next:(Terminal gcd.ctrl.is_a_lt_b)),(Terminal gcd.ctrl.is_b_zero)) True:(Terminal gcd.ctrl._rn3_next_state__0) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn0_curr_state__0),(Terminal gcd.ctrl.STATE_IDLE)) True:(Branch Cond:(Operator Land Next:(Terminal gcd.ctrl.req_val),(Terminal gcd.ctrl.req_rdy)) True:(Terminal gcd.ctrl._rn2_next_state__0) False:(Terminal gcd.ctrl._rn1_next_state__0)) False:(Terminal gcd.ctrl.next_state__0))) False:(Terminal gcd.ctrl.next_state__0))) False:(Terminal gcd.ctrl.next_state__0)))
(Bind dest:gcd.ctrl._rn6_current_state__1 tree:(Terminal gcd.ctrl.state$out))
(Bind dest:gcd.ctrl._rn7_req_rdy tree:(IntConst 1))
(Bind dest:gcd.ctrl._rn8_resp_val tree:(IntConst 0))
(Bind dest:gcd.ctrl._rn9_a_mux_sel tree:(Terminal gcd.ctrl.A_MUX_SEL_IN))
(Bind dest:gcd.ctrl.a_mux_sel tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_IDLE)) True:(Terminal gcd.ctrl._rn9_a_mux_sel) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_CALC)) True:(Terminal gcd.ctrl._rn17_a_mux_sel) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_DONE)) True:(Terminal gcd.ctrl._rn23_a_mux_sel) False:(Terminal gcd.ctrl._rn29_a_mux_sel)))))
(Bind dest:gcd.ctrl.a_reg_en tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_IDLE)) True:(Terminal gcd.ctrl._rn10_a_reg_en) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_CALC)) True:(Terminal gcd.ctrl._rn18_a_reg_en) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_DONE)) True:(Terminal gcd.ctrl._rn24_a_reg_en) False:(Terminal gcd.ctrl._rn30_a_reg_en)))))
(Bind dest:gcd.ctrl.b_mux_sel tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_IDLE)) True:(Terminal gcd.ctrl._rn11_b_mux_sel) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_CALC)) True:(Terminal gcd.ctrl._rn19_b_mux_sel) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_DONE)) True:(Terminal gcd.ctrl._rn25_b_mux_sel) False:(Terminal gcd.ctrl._rn31_b_mux_sel)))))
(Bind dest:gcd.ctrl.b_reg_en tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_IDLE)) True:(Terminal gcd.ctrl._rn12_b_reg_en) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_CALC)) True:(Terminal gcd.ctrl._rn20_b_reg_en) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_DONE)) True:(Terminal gcd.ctrl._rn26_b_reg_en) False:(Terminal gcd.ctrl._rn32_b_reg_en)))))
(Bind dest:gcd.ctrl.clk tree:(Terminal gcd.ctrl$clk))
(Bind dest:gcd.ctrl.curr_state__0 tree:(Terminal gcd.ctrl._rn0_curr_state__0))
(Bind dest:gcd.ctrl.current_state__1 tree:(Terminal gcd.ctrl._rn6_current_state__1))
(Bind dest:gcd.ctrl.do_sub tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_IDLE)) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_CALC)) True:(Terminal gcd.ctrl._rn14_do_sub))))
(Bind dest:gcd.ctrl.do_swap tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_IDLE)) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_CALC)) True:(Terminal gcd.ctrl._rn13_do_swap))))
(Bind dest:gcd.ctrl.is_a_lt_b tree:(Terminal gcd.ctrl$is_a_lt_b))
(Bind dest:gcd.ctrl.is_b_zero tree:(Terminal gcd.ctrl$is_b_zero))
(Bind dest:gcd.ctrl.next_state__0 tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn0_curr_state__0),(Terminal gcd.ctrl.STATE_DONE)) True:(Branch Cond:(Operator Land Next:(Terminal gcd.ctrl.resp_val),(Terminal gcd.ctrl.resp_rdy)) True:(Terminal gcd.ctrl._rn4_next_state__0) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn0_curr_state__0),(Terminal gcd.ctrl.STATE_CALC)) True:(Branch Cond:(Operator Land Next:(Operator Ulnot Next:(Terminal gcd.ctrl.is_a_lt_b)),(Terminal gcd.ctrl.is_b_zero)) True:(Terminal gcd.ctrl._rn3_next_state__0) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn0_curr_state__0),(Terminal gcd.ctrl.STATE_IDLE)) True:(Branch Cond:(Operator Land Next:(Terminal gcd.ctrl.req_val),(Terminal gcd.ctrl.req_rdy)) True:(Terminal gcd.ctrl._rn2_next_state__0) False:(Terminal gcd.ctrl._rn1_next_state__0))))))))
(Bind dest:gcd.ctrl.req_rdy tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_IDLE)) True:(Terminal gcd.ctrl._rn7_req_rdy) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_CALC)) True:(Terminal gcd.ctrl._rn15_req_rdy) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_DONE)) True:(Terminal gcd.ctrl._rn21_req_rdy) False:(Terminal gcd.ctrl._rn27_req_rdy)))))
(Bind dest:gcd.ctrl.req_val tree:(Terminal gcd.ctrl$req_val))
(Bind dest:gcd.ctrl.reset tree:(Terminal gcd.ctrl$reset))
(Bind dest:gcd.ctrl.resp_rdy tree:(Terminal gcd.ctrl$resp_rdy))
(Bind dest:gcd.ctrl.resp_val tree:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_IDLE)) True:(Terminal gcd.ctrl._rn8_resp_val) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_CALC)) True:(Terminal gcd.ctrl._rn16_resp_val) False:(Branch Cond:(Operator Eq Next:(Terminal gcd.ctrl._rn6_current_state__1),(Terminal gcd.ctrl.STATE_DONE)) True:(Terminal gcd.ctrl._rn22_resp_val) False:(Terminal gcd.ctrl._rn28_resp_val)))))
(Bind dest:gcd.ctrl.state$clk tree:(Terminal gcd.ctrl.clk))
(Bind dest:gcd.ctrl.state$in_ tree:(Terminal gcd.ctrl._rn5_state$in_))
(Bind dest:gcd.ctrl.state$out tree:(Terminal gcd.ctrl.state.out))
(Bind dest:gcd.ctrl.state$reset tree:(Terminal gcd.ctrl.reset))
(Bind dest:gcd.ctrl.state.clk tree:(Terminal gcd.ctrl.state$clk))
(Bind dest:gcd.ctrl.state.in_ tree:(Terminal gcd.ctrl.state$in_))
(Bind dest:gcd.ctrl.state.out tree:(Branch Cond:(Terminal gcd.ctrl.state.reset) True:(Terminal gcd.ctrl.state.reset_value) False:(Terminal gcd.ctrl.state.in_)))
(Bind dest:gcd.ctrl.state.reset tree:(Terminal gcd.ctrl.state$reset))
(Bind dest:gcd.ctrl.state.reset_value tree:(IntConst 0))
(Bind dest:gcd.dpath$a_mux_sel tree:(Terminal gcd.ctrl$a_mux_sel))
(Bind dest:gcd.dpath$a_reg_en tree:(Terminal gcd.ctrl$a_reg_en))
(Bind dest:gcd.dpath$b_mux_sel tree:(Terminal gcd.ctrl$b_mux_sel))
(Bind dest:gcd.dpath$b_reg_en tree:(Terminal gcd.ctrl$b_reg_en))
(Bind dest:gcd.dpath$clk tree:(Terminal gcd.clk))
(Bind dest:gcd.dpath$is_a_lt_b tree:(Terminal gcd.dpath.is_a_lt_b))
(Bind dest:gcd.dpath$is_b_zero tree:(Terminal gcd.dpath.is_b_zero))
(Bind dest:gcd.dpath$req_msg_a tree:(Partselect Var:(Terminal gcd.req_msg) MSB:(IntConst 31) LSB:(IntConst 16)))
(Bind dest:gcd.dpath$req_msg_b tree:(Partselect Var:(Terminal gcd.req_msg) MSB:(IntConst 15) LSB:(IntConst 0)))
(Bind dest:gcd.dpath$reset tree:(Terminal gcd.reset))
(Bind dest:gcd.dpath$resp_msg tree:(Terminal gcd.dpath.resp_msg))
(Bind dest:gcd.dpath.a_lt_b$clk tree:(Terminal gcd.dpath.clk))
(Bind dest:gcd.dpath.a_lt_b$in0 tree:(Terminal gcd.dpath.a_reg$out))
(Bind dest:gcd.dpath.a_lt_b$in1 tree:(Terminal gcd.dpath.b_reg$out))
(Bind dest:gcd.dpath.a_lt_b$out tree:(Terminal gcd.dpath.a_lt_b.out))
(Bind dest:gcd.dpath.a_lt_b$reset tree:(Terminal gcd.dpath.reset))
(Bind dest:gcd.dpath.a_lt_b._rn33_out tree:(Operator LessThan Next:(Terminal gcd.dpath.a_lt_b.in0),(Terminal gcd.dpath.a_lt_b.in1)))
(Bind dest:gcd.dpath.a_lt_b.clk tree:(Terminal gcd.dpath.a_lt_b$clk))
(Bind dest:gcd.dpath.a_lt_b.in0 tree:(Terminal gcd.dpath.a_lt_b$in0))
(Bind dest:gcd.dpath.a_lt_b.in1 tree:(Terminal gcd.dpath.a_lt_b$in1))
(Bind dest:gcd.dpath.a_lt_b.out tree:(Terminal gcd.dpath.a_lt_b._rn33_out))
(Bind dest:gcd.dpath.a_lt_b.reset tree:(Terminal gcd.dpath.a_lt_b$reset))
(Bind dest:gcd.dpath.a_mux$clk tree:(Terminal gcd.dpath.clk))
(Bind dest:gcd.dpath.a_mux$in_$000 tree:(Terminal gcd.dpath.req_msg_a))
(Bind dest:gcd.dpath.a_mux$in_$001 tree:(Terminal gcd.dpath.sub_out))
(Bind dest:gcd.dpath.a_mux$in_$002 tree:(Terminal gcd.dpath.b_reg_out))
(Bind dest:gcd.dpath.a_mux$out tree:(Terminal gcd.dpath.a_mux.out))
(Bind dest:gcd.dpath.a_mux$reset tree:(Terminal gcd.dpath.reset))
(Bind dest:gcd.dpath.a_mux$sel tree:(Terminal gcd.dpath.a_mux_sel))
(Bind dest:gcd.dpath.a_mux._rn35_out tree:(Pointer Var:(Terminal gcd.dpath.a_mux.in_) PTR:(Terminal gcd.dpath.a_mux.sel)))
(Bind dest:gcd.dpath.a_mux.clk tree:(Terminal gcd.dpath.a_mux$clk))
(Bind dest:gcd.dpath.a_mux.in_ ptr:'d0 tree:(Terminal gcd.dpath.a_mux.in_$000))
(Bind dest:gcd.dpath.a_mux.in_ ptr:'d1 tree:(Terminal gcd.dpath.a_mux.in_$001))
(Bind dest:gcd.dpath.a_mux.in_ ptr:'d2 tree:(Terminal gcd.dpath.a_mux.in_$002))
(Bind dest:gcd.dpath.a_mux.in_$000 tree:(Terminal gcd.dpath.a_mux$in_$000))
(Bind dest:gcd.dpath.a_mux.in_$001 tree:(Terminal gcd.dpath.a_mux$in_$001))
(Bind dest:gcd.dpath.a_mux.in_$002 tree:(Terminal gcd.dpath.a_mux$in_$002))
(Bind dest:gcd.dpath.a_mux.nports tree:(IntConst 3))
(Bind dest:gcd.dpath.a_mux.out tree:(Terminal gcd.dpath.a_mux._rn35_out))
(Bind dest:gcd.dpath.a_mux.reset tree:(Terminal gcd.dpath.a_mux$reset))
(Bind dest:gcd.dpath.a_mux.sel tree:(Terminal gcd.dpath.a_mux$sel))
(Bind dest:gcd.dpath.a_mux_sel tree:(Terminal gcd.dpath$a_mux_sel))
(Bind dest:gcd.dpath.a_reg$clk tree:(Terminal gcd.dpath.clk))
(Bind dest:gcd.dpath.a_reg$en tree:(Terminal gcd.dpath.a_reg_en))
(Bind dest:gcd.dpath.a_reg$in_ tree:(Terminal gcd.dpath.a_mux$out))
(Bind dest:gcd.dpath.a_reg$out tree:(Terminal gcd.dpath.a_reg.out))
(Bind dest:gcd.dpath.a_reg$reset tree:(Terminal gcd.dpath.reset))
(Bind dest:gcd.dpath.a_reg.clk tree:(Terminal gcd.dpath.a_reg$clk))
(Bind dest:gcd.dpath.a_reg.en tree:(Terminal gcd.dpath.a_reg$en))
(Bind dest:gcd.dpath.a_reg.in_ tree:(Terminal gcd.dpath.a_reg$in_))
(Bind dest:gcd.dpath.a_reg.out tree:(Branch Cond:(Terminal gcd.dpath.a_reg.en) True:(Terminal gcd.dpath.a_reg.in_)))
(Bind dest:gcd.dpath.a_reg.reset tree:(Terminal gcd.dpath.a_reg$reset))
(Bind dest:gcd.dpath.a_reg_en tree:(Terminal gcd.dpath$a_reg_en))
(Bind dest:gcd.dpath.b_mux$clk tree:(Terminal gcd.dpath.clk))
(Bind dest:gcd.dpath.b_mux$in_$000 tree:(Terminal gcd.dpath.a_reg$out))
(Bind dest:gcd.dpath.b_mux$in_$001 tree:(Terminal gcd.dpath.req_msg_b))
(Bind dest:gcd.dpath.b_mux$out tree:(Terminal gcd.dpath.b_mux.out))
(Bind dest:gcd.dpath.b_mux$reset tree:(Terminal gcd.dpath.reset))
(Bind dest:gcd.dpath.b_mux$sel tree:(Terminal gcd.dpath.b_mux_sel))
(Bind dest:gcd.dpath.b_mux._rn36_out tree:(Pointer Var:(Terminal gcd.dpath.b_mux.in_) PTR:(Terminal gcd.dpath.b_mux.sel)))
(Bind dest:gcd.dpath.b_mux.clk tree:(Terminal gcd.dpath.b_mux$clk))
(Bind dest:gcd.dpath.b_mux.in_ ptr:'d0 tree:(Terminal gcd.dpath.b_mux.in_$000))
(Bind dest:gcd.dpath.b_mux.in_ ptr:'d1 tree:(Terminal gcd.dpath.b_mux.in_$001))
(Bind dest:gcd.dpath.b_mux.in_$000 tree:(Terminal gcd.dpath.b_mux$in_$000))
(Bind dest:gcd.dpath.b_mux.in_$001 tree:(Terminal gcd.dpath.b_mux$in_$001))
(Bind dest:gcd.dpath.b_mux.nports tree:(IntConst 2))
(Bind dest:gcd.dpath.b_mux.out tree:(Terminal gcd.dpath.b_mux._rn36_out))
(Bind dest:gcd.dpath.b_mux.reset tree:(Terminal gcd.dpath.b_mux$reset))
(Bind dest:gcd.dpath.b_mux.sel tree:(Terminal gcd.dpath.b_mux$sel))
(Bind dest:gcd.dpath.b_mux_sel tree:(Terminal gcd.dpath$b_mux_sel))
(Bind dest:gcd.dpath.b_reg$clk tree:(Terminal gcd.dpath.clk))
(Bind dest:gcd.dpath.b_reg$en tree:(Terminal gcd.dpath.b_reg_en))
(Bind dest:gcd.dpath.b_reg$in_ tree:(Terminal gcd.dpath.b_mux$out))
(Bind dest:gcd.dpath.b_reg$out tree:(Terminal gcd.dpath.b_reg.out))
(Bind dest:gcd.dpath.b_reg$reset tree:(Terminal gcd.dpath.reset))
(Bind dest:gcd.dpath.b_reg.clk tree:(Terminal gcd.dpath.b_reg$clk))
(Bind dest:gcd.dpath.b_reg.en tree:(Terminal gcd.dpath.b_reg$en))
(Bind dest:gcd.dpath.b_reg.in_ tree:(Terminal gcd.dpath.b_reg$in_))
(Bind dest:gcd.dpath.b_reg.out tree:(Branch Cond:(Terminal gcd.dpath.b_reg.en) True:(Terminal gcd.dpath.b_reg.in_)))
(Bind dest:gcd.dpath.b_reg.reset tree:(Terminal gcd.dpath.b_reg$reset))
(Bind dest:gcd.dpath.b_reg_en tree:(Terminal gcd.dpath$b_reg_en))
(Bind dest:gcd.dpath.b_reg_out tree:(Terminal gcd.dpath.b_reg$out))
(Bind dest:gcd.dpath.b_zero$clk tree:(Terminal gcd.dpath.clk))
(Bind dest:gcd.dpath.b_zero$in_ tree:(Terminal gcd.dpath.b_reg$out))
(Bind dest:gcd.dpath.b_zero$out tree:(Terminal gcd.dpath.b_zero.out))
(Bind dest:gcd.dpath.b_zero$reset tree:(Terminal gcd.dpath.reset))
(Bind dest:gcd.dpath.b_zero._rn34_out tree:(Operator Eq Next:(Terminal gcd.dpath.b_zero.in_),(IntConst 0)))
(Bind dest:gcd.dpath.b_zero.clk tree:(Terminal gcd.dpath.b_zero$clk))
(Bind dest:gcd.dpath.b_zero.in_ tree:(Terminal gcd.dpath.b_zero$in_))
(Bind dest:gcd.dpath.b_zero.out tree:(Terminal gcd.dpath.b_zero._rn34_out))
(Bind dest:gcd.dpath.b_zero.reset tree:(Terminal gcd.dpath.b_zero$reset))
(Bind dest:gcd.dpath.clk tree:(Terminal gcd.dpath$clk))
(Bind dest:gcd.dpath.is_a_lt_b tree:(Terminal gcd.dpath.a_lt_b$out))
(Bind dest:gcd.dpath.is_b_zero tree:(Terminal gcd.dpath.b_zero$out))
(Bind dest:gcd.dpath.req_msg_a tree:(Terminal gcd.dpath$req_msg_a))
(Bind dest:gcd.dpath.req_msg_b tree:(Terminal gcd.dpath$req_msg_b))
(Bind dest:gcd.dpath.reset tree:(Terminal gcd.dpath$reset))
(Bind dest:gcd.dpath.resp_msg tree:(Terminal gcd.dpath.sub$out))
(Bind dest:gcd.dpath.sub$clk tree:(Terminal gcd.dpath.clk))
(Bind dest:gcd.dpath.sub$in0 tree:(Terminal gcd.dpath.a_reg$out))
(Bind dest:gcd.dpath.sub$in1 tree:(Terminal gcd.dpath.b_reg$out))
(Bind dest:gcd.dpath.sub$out tree:(Terminal gcd.dpath.sub.out))
(Bind dest:gcd.dpath.sub$reset tree:(Terminal gcd.dpath.reset))
(Bind dest:gcd.dpath.sub._rn37_out tree:(Operator Minus Next:(Terminal gcd.dpath.sub.in0),(Terminal gcd.dpath.sub.in1)))
(Bind dest:gcd.dpath.sub.clk tree:(Terminal gcd.dpath.sub$clk))
(Bind dest:gcd.dpath.sub.in0 tree:(Terminal gcd.dpath.sub$in0))
(Bind dest:gcd.dpath.sub.in1 tree:(Terminal gcd.dpath.sub$in1))
(Bind dest:gcd.dpath.sub.out tree:(Terminal gcd.dpath.sub._rn37_out))
(Bind dest:gcd.dpath.sub.reset tree:(Terminal gcd.dpath.sub$reset))
(Bind dest:gcd.dpath.sub_out tree:(Terminal gcd.dpath.sub$out))
(Bind dest:gcd.req_rdy tree:(Terminal gcd.ctrl$req_rdy))
(Bind dest:gcd.resp_msg tree:(Terminal gcd.dpath$resp_msg))
(Bind dest:gcd.resp_val tree:(Terminal gcd.ctrl$resp_val))